name: Deploy Flask App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps: 

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
  
    - name: Install Terraform
      run: |
        sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
        sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
        sudo apt-get update && sudo apt-get install terraform

    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      run: terraform apply -auto-approve
    
    - name: Wait for EC2 Instance to be ready
      run: |
        echo "Waiting for EC2 instance to be ready..."
        sleep 60
    
    - name: Extract EC2 Instance Public IP
      id: extract_ip
      run: |
          instance_ip=$(terraform output -raw ec2_instance_public_ip)
          echo "::set-output name=INSTANCE_IP::$instance_ip"
  
    - name: Install SSH client
      run: sudo apt-get install -y openssh-client
  
    - name: Copy SSH Key to EC2
      env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          TF_VAR_deploy_key: ${{ secrets.DEPLOY_KEY }}
      run: |
          echo "$DEPLOY_KEY" > ssh_private_key
          chmod 600 ssh_private_key
          scp -o StrictHostKeyChecking=no -i ssh_private_key ec2-user@${{ steps.extract_ip.outputs.INSTANCE_IP }}:/home/ec2-user/.ssh/id_rsa
          ssh -o StrictHostKeyChecking=no -i ssh_private_key ec2-user@${{ steps.extract_ip.outputs.INSTANCE_IP }} "chmod 600 /home/ec2-user/.ssh/id_rsa"
        
